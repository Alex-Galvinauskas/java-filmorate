name: Test Coverage and Badge

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Run tests with coverage
        run: |
          mvn clean test jacoco:report
          ls -la target/site/jacoco/ || echo "Jacoco directory doesn't exist"

      - name: Generate coverage badge
        id: coverage-badge
        run: |
          sleep 5
          
          if [ ! -f "target/site/jacoco/jacoco.xml" ]; then
            echo "❌ JaCoCo report not found!"
            echo "Listing target directory:"
            find target -name "*.xml" -type f 2>/dev/null || echo "No XML files found"
            exit 1
          fi
          
          echo "✅ JaCoCo report found"
          
          COVERAGE=$(xmllint --xpath 'string(//report/counter[@type="LINE"]/@missed)' 
          target/site/jacoco/jacoco.xml 2>/dev/null || echo "")
          TOTAL=$(xmllint --xpath 'string(//report/counter[@type="LINE"]/@covered)' 
          target/site/jacoco/jacoco.xml 2>/dev/null || echo "")
          
          echo "Coverage data - Missed: $COVERAGE, Covered: $TOTAL"
          
          if [ -n "$COVERAGE" ] && [ -n "$TOTAL" ]; then
            MISSED_NUM=$(echo "$COVERAGE" | awk '{print int($1)}')
            COVERED_NUM=$(echo "$TOTAL" | awk '{print int($1)}')
            TOTAL_LINES=$((MISSED_NUM + COVERED_NUM))
          
            if [ $TOTAL_LINES -gt 0 ]; then
              PERCENT=$((COVERED_NUM * 100 / TOTAL_LINES))
            else
              PERCENT=0
            fi
          else
            echo "Trying alternative parsing method..."
            COVERAGE_LINE=$(grep 'LINE' target/site/jacoco/jacoco.xml | head -1)
            echo "Coverage line: $COVERAGE_LINE"
          
            if [[ $COVERAGE_LINE =~ missed=\"([0-9]+)\".*covered=\"([0-9]+)\" ]]; then
              MISSED_NUM=${BASH_REMATCH[1]}
              COVERED_NUM=${BASH_REMATCH[2]}
              TOTAL_LINES=$((MISSED_NUM + COVERED_NUM))
              PERCENT=$((COVERED_NUM * 100 / TOTAL_LINES))
            else
              echo "❌ Could not parse coverage data"
              PERCENT=0
            fi
          fi
          
          echo "Coverage percentage: $PERCENT%"
          
          echo "PERCENT=$PERCENT" >> $GITHUB_OUTPUT
          
          if [ "$PERCENT" -ge 90 ]; then
            COLOR="brightgreen"
          elif [ "$PERCENT" -ge 80 ]; then
            COLOR="green"
          elif [ "$PERCENT" -ge 70 ]; then
            COLOR="yellowgreen"
          elif [ "$PERCENT" -ge 60 ]; then
            COLOR="yellow"
          elif [ "$PERCENT" -ge 50 ]; then
            COLOR="orange"
          else
            COLOR="red"
          fi
          
          echo "Selected color: $COLOR"
          
          curl -s "https://img.shields.io/badge/coverage-${PERCENT}%25-${COLOR}?logo=java&style=for-the-badge" -o coverage.svg
          
          echo "✅ Coverage badge generated: ${PERCENT}%"

      - name: Commit and push badge
        if: github.event_name == 'push'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git status
          git add coverage.svg
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "📊 Update test coverage: ${{ steps.coverage-badge.outputs.PERCENT }}% [skip ci]"
            git push
          fi

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/
          retention-days: 30